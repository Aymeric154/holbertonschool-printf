.TH _PRINTF "JULY 2024"   "Custom Printf Function"
.SH NAME
_printf \- custom implementation of the standard printf function
.SH SYNOPSIS
.B #include "main.h"
.br
.B int _printf(const char *format, ...);
.SH DESCRIPTION
The 
.B _printf
function produces output according to a 
.B format
string that specifies how subsequent arguments are converted for output.

The 
.B format
string is composed of zero or more directives: ordinary characters (not %), which are copied unchanged to the output stream, and conversion specifications, each of which results in fetching zero or more subsequent arguments. Each conversion specification begins with the character %, followed by a conversion specifier.

The available conversion specifiers are:

.TP
.B %c
Prints a single character.

.TP
.B %s
Prints a string.

.TP
.B %d, %i
Prints a signed decimal integer.

.TP
.B %%
Prints a literal % character.

.SH RETURN VALUE
Upon successful return, the 
.B _printf
function returns the number of characters printed (excluding the null byte used to end output to strings). If an output error is encountered, a negative value is returned.

.SH EXAMPLES
.TP
.B _printf("Character: %c\n", 'A');
Prints: "Character: A"

.TP
.B _printf("String: %s\n", "Hello, World!");
Prints: "String: Hello, World!"

.TP
.B _printf("Decimal: %d\n", 123);
Prints: "Decimal: 123"

.SH AUTHORS
Diarra & Aymeric, July 2024
